name: Test ðŸ§ª
on:
  workflow_dispatch:
jobs:
  test-ubuntu:
    name: Test ${{ matrix.os }} with ${{ matrix.hatchet-protocol }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        hatchet-protocol: [holster, carve, cleave, rampage]
      fail-fast: false
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          path: ./.github/actions/this
      - name: Nothing but Nix
        uses: ./.github/actions/this
        with:
          hatchet-protocol: ${{ matrix.hatchet-protocol }}
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - name: Run Nix
        run: |
          nix --version
          echo "Hello Nix" | nix run "https://flakehub.com/f/NixOS/nixpkgs/*#neo-cowsay"
      - name: Wait
        run: |
          while [ ! -f ${HOME}/.expansion/all_done ]; do
            sleep 1
            if [ -f ${HOME}/.expansion/expansion.log ]; then
              tail -n 1 ${HOME}/.expansion/expansion.log
            fi
          done
      - name: Status
        run: |          
          if [ -f ${HOME}/.expansion/expansion.log ]; then
            cat ${HOME}/.expansion/expansion.log
          fi
          ls -ltr ${HOME}/.expansion/*_done
          all_disks=()
  
          # Check for disks in /mnt directory
          mnt_disks=(/mnt/disk*.img)
          if [[ -e "${mnt_disks[0]}" ]]; then
            all_disks+=("${mnt_disks[@]}")
          fi

          # Check for disks in / directory
          root_disks=(/disk*.img)
          if [[ -e "${root_disks[0]}" ]]; then
            all_disks+=("${root_disks[@]}")
          fi        
          
          echo "Found ${#all_disks[@]} disk image(s):"
          for disk in "${all_disks[@]}"; do
            echo "- $disk ($(du -h "$disk" | cut -f1))"
          done
          